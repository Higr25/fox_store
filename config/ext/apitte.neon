# Extension > Apitte
#
extensions:
	middlewares: Contributte\Middlewares\DI\MiddlewaresExtension
	resource: Contributte\DI\Extension\ResourceExtension
	api: Apitte\Core\DI\ApiExtension

resource:
	resources:
		App\Module\:
			paths: [%appDir%/Module]

api:
	debug: true
	plugins:
		Apitte\Core\DI\Plugin\CoreSchemaPlugin:
		Apitte\Core\DI\Plugin\CoreServicesPlugin:
		Apitte\Debug\DI\DebugPlugin:
		Apitte\Middlewares\DI\MiddlewaresPlugin:
			tracy: true
			autobasepath: true
		Apitte\OpenApi\DI\OpenApiPlugin:
			swaggerUi:
				panel: true

services:
	middleware.tryCatch:
		factory: Contributte\Middlewares\TryCatchMiddleware
		tags: [middleware: [priority: 1]]
		setup:
			- setDebugMode(%debugMode%)
			- setCatchExceptions(%productionMode%) # used in debug only
			- setLogger(@Psr\Log\LoggerInterface, Psr\Log\LogLevel::ERROR)

	middlewares.catchException:
		factory: App\Model\Api\Middleware\CatchExceptionMiddleware
		tags: [middleware: [priority: 5]]

	middlewares.logging:
		factory: App\Model\Api\Middleware\RequestLoggerMiddleware
		tags: [middleware: [priority: 10]]

	middlewares.rateLimit:
		factory: App\Model\Api\Middleware\RateLimitMiddleware(%rateLimit.limit%, %rateLimit.window%, @redisClient)
		tags: [middleware: [priority: 20]]

	middlewares.jsonValidator:
		factory: App\Model\Api\Middleware\JsonValidatorMiddleware
		tags: [middleware: [priority: 50]]

	middleware.methodOverride:
		factory: Contributte\Middlewares\MethodOverrideMiddleware
		tags: [middleware: [priority: 150]]

	middleware.cors:
		factory: App\Model\Api\Middleware\CORSMiddleware
		tags: [middleware: [priority: 200]]

	api.core.dispatcher: App\Model\Api\Dispatcher\JsonDispatcher
	api.core.errorHandler: App\Model\Api\ErrorHandler\ThrowingErrorHandler
